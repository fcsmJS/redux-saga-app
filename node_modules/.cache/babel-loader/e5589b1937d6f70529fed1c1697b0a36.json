{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nconst API_URL = 'https://jsonplaceholder.typicode.com/users';\n\nfunction getApi() {\n  return fetch(API_URL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json()).catch(error => {\n    throw error;\n  });\n}\n\nfunction* fetchUsers(action) {\n  try {\n    const users = yield call(getApi);\n    yield put({\n      type: 'GET_USERS_SUCCESS',\n      users: users\n    });\n  } catch (error) {\n    yield put({\n      type: 'GET_USERS_FAILED',\n      message: error.message\n    });\n  }\n}\n\nfunction* userSaga() {\n  yield takeEvery('GET_USERS_REQUESTED', fetchUsers);\n}\n\nexport default userSaga;","map":{"version":3,"sources":["/Users/alexey.ivanov/Documents/redux-saga-app/src/redux/sagas/userSaga.js"],"names":["call","put","takeEvery","API_URL","getApi","fetch","method","headers","then","response","json","catch","error","fetchUsers","action","users","type","message","userSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AAEA,MAAMC,OAAO,GAAG,4CAAhB;;AAEA,SAASC,MAAT,GAAkB;AACd,SAAOC,KAAK,CAACF,OAAD,EAAU;AAClBG,IAAAA,MAAM,EAAE,KADU;AAElBC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFS,GAAV,CAAL,CAKJC,IALI,CAKCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALb,EAMNC,KANM,CAMAC,KAAK,IAAI;AAAC,UAAMA,KAAN;AAAY,GANtB,CAAP;AAOH;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AACzB,MAAI;AACA,UAAMC,KAAK,GAAG,MAAMf,IAAI,CAACI,MAAD,CAAxB;AACA,UAAMH,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAE,mBADA;AAEND,MAAAA,KAAK,EAAEA;AAFD,KAAD,CAAT;AAIH,GAND,CAOA,OAAOH,KAAP,EAAc;AACV,UAAMX,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAE,kBADA;AAENC,MAAAA,OAAO,EAAEL,KAAK,CAACK;AAFT,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUC,QAAV,GAAqB;AACjB,QAAMhB,SAAS,CAAC,qBAAD,EAAwBW,UAAxB,CAAf;AACH;;AAED,eAAeK,QAAf","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\n\nconst API_URL = 'https://jsonplaceholder.typicode.com/users';\n\nfunction getApi() {\n    return fetch(API_URL, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json())\n    .catch(error => {throw error})\n}\n\nfunction* fetchUsers(action) {\n    try {\n        const users = yield call(getApi);\n        yield put({\n            type: 'GET_USERS_SUCCESS',\n            users: users\n        })\n    }\n    catch (error) {\n        yield put({\n            type: 'GET_USERS_FAILED',\n            message: error.message\n        });\n    }\n}\n\nfunction* userSaga() {\n    yield takeEvery('GET_USERS_REQUESTED', fetchUsers);\n}\n\nexport default userSaga;"]},"metadata":{},"sourceType":"module"}